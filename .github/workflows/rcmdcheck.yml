# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R-CMD-check

on:
  push:
    branches:
      - main
      - master
      - devel

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: '4.0'}
          - {os: macOS-latest, r: '4.0'}
          - {os: ubuntu-18.04, r: '4.0', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{secrets.PAT}}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Install R packages for CI
        run: |
          install.packages(c('remotes', 'BiocManager'))
          remotes::install_github('r-hub/sysreqs')
          BiocManager::install(ask = FALSE)
        shell: Rscript {0}

      - name: Query dependencies
        run: |
          saveRDS(remotes::dev_package_deps(dependencies = TRUE, repos = BiocManager::repositories()), "depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
          # libcurl4 for Rhtslib
        run: |
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
          sudo apt-get install libcurl4-openssl-dev libglpk-dev

      - name: Install R dependencies
        run: |
          remotes::install_github("joey711/phyloseq", repos = BiocManager::repositories())
          remotes::install_github("microbiome/microbiome", repos = BiocManager::repositories())
          BiocManager::install(remotes::dev_package_deps(dependencies = TRUE, repos = BiocManager::repositories())$package)
          remotes::install_cran(c("rcmdcheck","covr","magick"))
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error", check_dir = "check")
        shell: Rscript {0}

      - name: Test coverage
        if: matrix.config.os == 'ubuntu-18.04' && matrix.config.r == '3.6'
        run: |
          covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
